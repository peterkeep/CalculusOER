<?xml version="1.0" encoding="UTF-8"?>

<section xml:id="sec-IntroSequences" xmlns:xi="http://www.w3.org/2001/XInclude">
    <title>Introduction to Infinite Sequences</title>
    
    <subsection xml:id="subsec-SequencesAsFunctions">
        <title>Sequences as Functions</title>
        <p>
            Before we move on to our actual goal of analyzing infinite series, we will construct infinite sequences. The big thing to remember here is that, when we build and analyze these sequences, we are are really building and analyzing functions. We want to keep this idea of sequences as functions in the forefront, since it will help us as we think about accumulating these function values into infinite series.
        </p>
        <xi:include href="./activities/act-FirstSequences.ptx" />
        <definition xml:id="def-ExplicitFormula">
            <title>Explicit Formula</title>
            <statement>
                <p>
                    An infinite sequence defined using an <term>explicit formula</term> is one where the <m>n</m>th term of the sequence is defined as a function output of <m>n</m>, the term's index.
                </p>
                <p>
                    Using notation, we might say that <m>a_n = f(n)</m> where:
                    <ul>
                        <li>
                            <p>
                                <m>a</m> is the ``name'' of the sequence (similar to how <m>f</m> and <m>g</m> are common names of functions).
                            </p>
                        </li>
                        <li>
                            <p>
                                <m>n</m> is the index of the term, typically a non-negative integer.
                            </p>
                        </li>
                        <li>
                            <p>
                                <m>f(n)</m> is the function that we use to generate the terms.
                            </p>
                        </li>
                    </ul>
                </p>
            </statement>
        </definition>
        <definition xml:id="def-RecursionRelation">
            <title>Recursion Relation</title>        
            <statement>
                <p>
                    A sequence is defined using a <term>recursion relation</term> is one where the <m>n</m>th term of the sequence is defined as a function output of the previous term, the <m>(n-1)</m>st term. The sequence also needs some initial term to base the subsequent terms from.
                </p>
                <p>
                    Using notation, we might say that <m>a_{n} = f(a_{n-1})</m>.
                </p>
            </statement>
        </definition>
        <p>
            These definitions are relatively limited. You might, for instance, know of a <em>very</em> famous sequence that is defined recursively by having each term being the sum of the <em>two</em> previous terms. Our study of sequences will be brief and all pointing towards infinite series, so there are a lot of nuances about sequences that we will skip.
        </p>
    </subsection>
    <xi:include href="./activities/act-FirstSequencesAgain.ptx" />
    <example>
        <title>Practice Writing some Terms</title>
        <introduction>
            <p>
                For each of the following sequences, write out the first handful of terms. There isn't a set amount, but you should write out enough to get a feel for the sequence structure and how the different ways of defining the sequences work. In each, you can start the index <m>n</m> at 1 and count upwards (<m>n=1,2,3,...</m>).
            </p>
        </introduction>
        <task>
            <statement>
                <p>
                    <m>a_1 = \frac{1}{3}</m> and <m>a_n = 2(a_{n-1})^2</m>
                </p>
            </statement>
        </task>
        <task>
            <statement>
                <p>
                    <m>b_n = \frac{\sin(n)}{n^2}</m>
                </p>
            </statement>
        </task>
        <task>
            <statement>
                <p>
                    <m>c_n = \sqrt[n]{n+1}</m>
                </p>
            </statement>
        </task>
        <task>
            <statement>
                <p>
                    <m>d_n = \frac{ne^n + e^n}{e^n}</m>       
                </p>
            </statement>
        </task>
    </example>


</section>